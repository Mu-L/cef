diff --git chrome/browser/ui/bookmarks/bookmark_stats.cc chrome/browser/ui/bookmarks/bookmark_stats.cc
index 6a1b3f5267b0d82d6763743f85815686942daa7e..d9cfa012c97564a4bb905b46c0c4d97fca8fdfae 100644
--- chrome/browser/ui/bookmarks/bookmark_stats.cc
+++ chrome/browser/ui/bookmarks/bookmark_stats.cc
@@ -21,7 +21,9 @@ bool IsBookmarkBarLocation(BookmarkLaunchLocation location) {
 
 auto GetMetricProfile(const Profile* profile) {
   DCHECK(profile);
-  DCHECK(profile->IsRegularProfile() || profile->IsIncognitoProfile());
+  DCHECK(profile->IsRegularProfile() || profile->IsIncognitoProfile() ||
+         (profile->IsOffTheRecord() &&
+          profile->GetOTRProfileID().IsUniqueForCEF()));
   return profile->IsRegularProfile()
              ? profile_metrics::BrowserProfileType::kRegular
              : profile_metrics::BrowserProfileType::kIncognito;
diff --git chrome/browser/ui/views/incognito_clear_browsing_data_dialog.cc chrome/browser/ui/views/incognito_clear_browsing_data_dialog.cc
index 594214f3f917b6e152b0908e3d1c3b84951ea00c..110b9d640f67ed8adecf51616aeb8a355415a8aa 100644
--- chrome/browser/ui/views/incognito_clear_browsing_data_dialog.cc
+++ chrome/browser/ui/views/incognito_clear_browsing_data_dialog.cc
@@ -31,7 +31,9 @@ IncognitoClearBrowsingDataDialog::IncognitoClearBrowsingDataDialog(
       dialog_type_(type),
       incognito_profile_(incognito_profile) {
   DCHECK(incognito_profile_);
-  DCHECK(incognito_profile_->IsIncognitoProfile());
+  DCHECK(incognito_profile_->IsIncognitoProfile() ||
+         (incognito_profile_->IsOffTheRecord() &&
+          incognito_profile_->GetOTRProfileID().IsUniqueForCEF()));
   SetButtons(static_cast<int>(ui::mojom::DialogButton::kNone));
   SetShowCloseButton(true);
 
diff --git chrome/browser/ui/views/incognito_clear_browsing_data_dialog_coordinator.cc chrome/browser/ui/views/incognito_clear_browsing_data_dialog_coordinator.cc
index 1cf20c6206d60d06b4c1935c1e2f9086cedbf071..9140d51cb79bd7b3f39dfcb850581d6f476a9ea7 100644
--- chrome/browser/ui/views/incognito_clear_browsing_data_dialog_coordinator.cc
+++ chrome/browser/ui/views/incognito_clear_browsing_data_dialog_coordinator.cc
@@ -27,6 +27,10 @@ void IncognitoClearBrowsingDataDialogCoordinator::Show(
           ->toolbar_button_provider()
           ->GetAvatarToolbarButton();
 
+  // The full toolbar may not be visible.
+  if (!avatar_toolbar_button)
+    return;
+
   auto bubble = std::make_unique<IncognitoClearBrowsingDataDialog>(
       avatar_toolbar_button, GetBrowser().profile(), type);
   DCHECK_EQ(nullptr, bubble_tracker_.view());
diff --git chrome/browser/ui/views/profiles/incognito_menu_view.cc chrome/browser/ui/views/profiles/incognito_menu_view.cc
index d9defcaa7da0c1deb2b5e6afd71ab96e77651c95..36e4e7799fab1d69b6fafb95557ba2cb8519406c 100644
--- chrome/browser/ui/views/profiles/incognito_menu_view.cc
+++ chrome/browser/ui/views/profiles/incognito_menu_view.cc
@@ -30,7 +30,9 @@
 IncognitoMenuView::IncognitoMenuView(views::Button* anchor_button,
                                      Browser* browser)
     : ProfileMenuViewBase(anchor_button, browser) {
-  CHECK(profile().IsIncognitoProfile());
+  CHECK(profile().IsIncognitoProfile() ||
+        (profile().IsOffTheRecord() &&
+         profile().GetOTRProfileID().IsUniqueForCEF()));
   GetViewAccessibility().SetName(GetAccessibleWindowTitle(),
                                  ax::mojom::NameFrom::kAttribute);
 
diff --git chrome/browser/ui/views/profiles/profile_menu_coordinator.cc chrome/browser/ui/views/profiles/profile_menu_coordinator.cc
index d34758a415fedaf430d925a1278aabbeaa82cd90..df1112c82665abaeace2385f5110e1256b5721ee 100644
--- chrome/browser/ui/views/profiles/profile_menu_coordinator.cc
+++ chrome/browser/ui/views/profiles/profile_menu_coordinator.cc
@@ -55,7 +55,9 @@ void ProfileMenuCoordinator::Show(
 
   std::unique_ptr<ProfileMenuViewBase> bubble;
   const bool is_incognito = profile_->IsIncognitoProfile();
-  if (is_incognito) {
+  if (is_incognito ||
+         (profile_->IsOffTheRecord() &&
+          profile_->GetOTRProfileID().IsUniqueForCEF())) {
     bubble =
         std::make_unique<IncognitoMenuView>(avatar_toolbar_button, browser);
   } else {
