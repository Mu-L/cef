diff --git chrome/browser/ui/views/frame/browser_native_widget_mac.h chrome/browser/ui/views/frame/browser_native_widget_mac.h
index 1423d061aa00c5e8c58bceb09f36d517821f8d06..dd7e20ed4850153fe5e1cc2d69acfd5299bc2693 100644
--- chrome/browser/ui/views/frame/browser_native_widget_mac.h
+++ chrome/browser/ui/views/frame/browser_native_widget_mac.h
@@ -11,6 +11,7 @@
 #include "ui/base/mojom/window_show_state.mojom-forward.h"
 #include "ui/views/widget/native_widget_mac.h"
 
+class Browser;
 class BrowserWidget;
 class BrowserView;
 @class BrowserWindowTouchBarController;
@@ -57,6 +58,21 @@ class BrowserNativeWidgetMac : public views::NativeWidgetMac,
   bool ShouldUseInitialVisibleOnAllWorkspaces() const override;
   void AnnounceTextInInProcessWindow(const std::u16string& text) override;
 
+  static void ValidateUserInterfaceItem(
+      Browser* browser,
+      int32_t command,
+      remote_cocoa::mojom::ValidateUserInterfaceItemResult* result);
+  static bool WillExecuteCommand(
+      Browser* browser,
+      int32_t command,
+      WindowOpenDisposition window_open_disposition,
+      bool is_before_first_responder);
+  static bool ExecuteCommand(
+      Browser* browser,
+      int32_t command,
+      WindowOpenDisposition window_open_disposition,
+      bool is_before_first_responder);
+
  protected:
   ~BrowserNativeWidgetMac() override;
 
diff --git chrome/browser/ui/views/frame/browser_native_widget_mac.mm chrome/browser/ui/views/frame/browser_native_widget_mac.mm
index 0f8f75c1986b0a64f53c6feefe296fe0eb309f0b..21871aa60fdd71b566a005f7d4235633b4b4c4bd 100644
--- chrome/browser/ui/views/frame/browser_native_widget_mac.mm
+++ chrome/browser/ui/views/frame/browser_native_widget_mac.mm
@@ -194,7 +194,14 @@ void BrowserNativeWidgetMac::OnWidgetDestroyed(views::Widget* widget) {
 void BrowserNativeWidgetMac::ValidateUserInterfaceItem(
     int32_t tag,
     remote_cocoa::mojom::ValidateUserInterfaceItemResult* result) {
-  Browser* browser = browser_view_->browser();
+  return ValidateUserInterfaceItem(browser_view_->browser(), tag, result);
+}
+
+// static
+void BrowserNativeWidgetMac::ValidateUserInterfaceItem(
+    Browser* browser,
+    int32_t tag,
+    remote_cocoa::mojom::ValidateUserInterfaceItemResult* result) {
   if (!chrome::SupportsCommand(browser, tag)) {
     result->enable = false;
     return;
@@ -333,8 +340,16 @@ bool BrowserNativeWidgetMac::WillExecuteCommand(
     int32_t command,
     WindowOpenDisposition window_open_disposition,
     bool is_before_first_responder) {
-  Browser* browser = browser_view_->browser();
+  return WillExecuteCommand(browser_view_->browser(), command,
+                            window_open_disposition, is_before_first_responder);
+}
 
+// static
+bool BrowserNativeWidgetMac::WillExecuteCommand(
+    Browser* browser,
+    int32_t command,
+    WindowOpenDisposition window_open_disposition,
+    bool is_before_first_responder) {
   if (is_before_first_responder) {
     // The specification for this private extensions API is incredibly vague.
     // For now, we avoid triggering chrome commands prior to giving the
@@ -366,13 +381,21 @@ bool BrowserNativeWidgetMac::ExecuteCommand(
     int32_t command,
     WindowOpenDisposition window_open_disposition,
     bool is_before_first_responder) {
-  if (!WillExecuteCommand(command, window_open_disposition,
+  return ExecuteCommand(browser_view_->browser(), command,
+                        window_open_disposition, is_before_first_responder);
+}
+ 
+// static
+bool BrowserNativeWidgetMac::ExecuteCommand(
+    Browser* browser,
+    int32_t command,
+    WindowOpenDisposition window_open_disposition,
+    bool is_before_first_responder) {
+  if (!WillExecuteCommand(browser, command, window_open_disposition,
                           is_before_first_responder)) {
     return false;
   }
 
-  Browser* browser = browser_view_->browser();
-
   chrome::ExecuteCommandWithDisposition(browser, command,
                                         window_open_disposition);
   return true;
