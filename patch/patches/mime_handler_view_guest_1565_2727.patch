diff --git content/browser/web_contents/web_contents_view.h content/browser/web_contents/web_contents_view.h
index 203dfb8e14f519a9ae1462e5eca123c2c7c9c70a..4606558fcecf7947334b3f300857c9d335605549 100644
--- content/browser/web_contents/web_contents_view.h
+++ content/browser/web_contents/web_contents_view.h
@@ -26,7 +26,7 @@ struct DropData;
 // The `WebContentsView` is an interface that is implemented by the platform-
 // dependent web contents views. The `WebContents` uses this interface to talk
 // to them.
-class WebContentsView {
+class CONTENT_EXPORT WebContentsView {
  public:
   virtual ~WebContentsView() = default;
 
diff --git extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest.cc extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest.cc
index 3e689ad6bdb51ccd7419eb87e4ba2cdbf2f1a8e9..9c93616fbd4904031f095ece1d129984fb8d759b 100644
--- extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest.cc
+++ extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest.cc
@@ -197,6 +197,8 @@ void MimeHandlerViewGuest::CreateInnerPage(
     WebContents::CreateParams params(browser_context(),
                                      guest_site_instance.get());
     params.guest_delegate = this;
+    if (delegate_)
+      delegate_->OverrideWebContentsCreateParams(&params);
     std::move(callback).Run(std::move(owned_this),
                             WebContents::CreateWithSessionStorage(
                                 params, owner_web_contents()
diff --git extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest_delegate.h extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest_delegate.h
index 2fb8a60c1f56d01ae5853fd5c92afd3e61106c80..edd275135e60d47ad45d3063508544a0d1003dca 100644
--- extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest_delegate.h
+++ extensions/browser/guest_view/mime_handler_view/mime_handler_view_guest_delegate.h
@@ -7,6 +7,8 @@
 
 #include <string>
 
+#include "content/public/browser/web_contents.h"
+
 namespace content {
 class BrowserContext;
 class RenderFrameHost;
@@ -26,6 +28,10 @@ class MimeHandlerViewGuestDelegate {
 
   virtual ~MimeHandlerViewGuestDelegate() {}
 
+  // Provides an opportunity to supply a custom view implementation.
+  virtual void OverrideWebContentsCreateParams(
+      content::WebContents::CreateParams* params) {}
+
   // Handles context menu, or returns false if unhandled.
   //
   // The `render_frame_host` represents the frame that requests the context menu
